name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  matrix-prep-bazelversion:
    # Prepares the 'bazelversion' axis of the test matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: bazel_current
        run: echo "bazelversion=$(head -n 1 .bazelversion)" >> $GITHUB_OUTPUT
      - id: bazel_previous
        run: echo "bazelversion=$(($(head -n 1 .bazelversion | cut -f1 -d.) - 1)).x" >> $GITHUB_OUTPUT
    outputs:
      # Will look like ["<version from .bazelversion>", "5.3.2"]
      bazelversions: ${{ toJSON(steps.*.outputs.bazelversion) }}

  matrix-prep-os:
    # Prepares the 'os' axis of the test matrix
    runs-on: ubuntu-latest
    # env:
    #   TC_CLOUD_TOKEN: ${{ secrets.TC_CLOUD_TOKEN }}
    steps:
      - id: linux
        run: echo "os=ubuntu-latest" >> $GITHUB_OUTPUT
      # - id: macos
      #   run: echo "os=macos-latest" >> $GITHUB_OUTPUT
      #   # Don't run MacOS if there is no TestContainers API token which is the case on forks. We need it for container tests.
      #   if: ${{ env.TC_CLOUD_TOKEN != '' }}
    outputs:
      # Will look like ["ubuntu-latest", "macos-latest"]
      os: ${{ toJSON(steps.*.outputs.os) }}

  test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    needs:
      - matrix-prep-bazelversion
      - matrix-prep-os

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(needs.matrix-prep-os.outputs.os) }}
        bazelversion: ${{ fromJSON(needs.matrix-prep-bazelversion.outputs.bazelversions) }}
        folder:
          - examples/multiple_versions
          - examples/local_module
          - examples/common_state_configuration
          - examples/opa
          - examples/declarative_authentication

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Mount bazel caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazel-repo
          key: bazel-cache-${{ matrix.os }}-${{ matrix.folder }}-${{ hashFiles('**/BUILD.bazel', '**/*.bzl', 'WORKSPACE') }}
          restore-keys: |
            bazel-cache-${{ matrix.os }}-${{ matrix.folder }}
            bazel-cache-${{ matrix.os }}
            bazel-cache-

      - name: Configure Bazel version
        working-directory: ${{ matrix.folder }}
        run: echo "${{ matrix.bazelversion }}" > .bazelversion

      - name: bazel test //...
        working-directory: ${{ matrix.folder }}
        run: bazel test //...
